{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Phonebook.jsx","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css","components/Phonebook.module.css"],"names":["module","exports","ContactForm","onSubmitHandler","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","Error","reset","inputNameId","shortid","generate","inputNumberId","className","s","form","onSubmit","preventDefault","id","htmlFor","type","pattern","title","required","onChange","Filter","label","input","ContactList","contacts","onClick","list","map","contact","item","button","Phonebook","JSON","parse","window","localStorage","getItem","contactData","setContactData","filter","setFilter","useEffect","setItem","stringify","normalizeFilter","toLowerCase","filteredContacts","includes","data","dataNameNormalized","findItem","find","alert","prevState","subTitle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e11ebfc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport s from './ContactForm.module.css';\nfunction ContactForm({ onSubmitHandler }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const currentTarget = e.currentTarget;\n    switch (currentTarget.name) {\n      case 'name': {\n        setName(currentTarget.value);\n        break;\n      }\n      case 'number': {\n        setNumber(currentTarget.value);\n        break;\n      }\n      default: {\n        throw new Error('No such input!');\n      }\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmitHandler({ id: shortid.generate(), name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const inputNameId = shortid.generate();\n  const inputNumberId = shortid.generate();\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label htmlFor={inputNameId}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        onChange={handleInputChange}\n        id={inputNameId}\n      />\n      <label htmlFor={inputNumberId}>Number</label>\n      <input\n        id={inputNumberId}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\">add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmitHandler: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  const id = shortid.generate();\n  return (\n    <>\n      <label htmlFor={id} className={s.label}>\n        Find contacts by name{' '}\n      </label>\n      <input\n        className={s.input}\n        id={id}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onClick }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <li className={s.item} key={contact.id}>\n          {contact.name}:<span>{contact.number}</span>\n          <button\n            className={s.button}\n            onClick={() => onClick(contact.id)}\n            type=\"button\"\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n    {},\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Phonebook.module.css';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nfunction Phonebook() {\n  const [contactData, setContactData] = useState(\n    JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  );\n\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contactData));\n  }, [contactData]);\n\n  const formSubmitHandler = data => {\n    const dataNameNormalized = data.name.toLowerCase();\n    const findItem = contactData.find(\n      contact => contact.name.toLowerCase() === dataNameNormalized,\n    );\n    if (findItem) {\n      alert(`${findItem.name} is already in contacts`);\n    } else {\n      setContactData(prevState => [...prevState, data]);\n    }\n  };\n\n  const listDeleteHandler = id => {\n    setContactData(contactData.filter(item => id !== item.id));\n  };\n\n  const onFilterChange = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const normalizeFilter = filter.toLowerCase();\n  const filteredContacts = contactData.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter),\n  );\n  return (\n    <>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmitHandler={formSubmitHandler} />\n      <h2 className={s.subTitle}>Contacts</h2>\n      <Filter value={filter} onChange={onFilterChange} />\n      <ContactList contacts={filteredContacts} onClick={listDeleteHandler} />\n    </>\n  );\n}\n\nPhonebook.propTypes = {\n  contacts: PropTypes.array,\n};\nexport default Phonebook;\n","import './App.css';\nimport React from 'react';\n\nimport Phonebook from './components/Phonebook';\nimport data from './components/data.json';\n\nconst App = () => {\n  return <Phonebook contacts={data} />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__veRiM\",\"subTitle\":\"Phonebook_subTitle__1Ew39\"};"],"sourceRoot":""}